#!/usr/bin/env zsh

# Variabel iDIR tidak lagi diperlukan karena Mako akan mencari ikon secara otomatis.

#==============================================================================
# FUNGSI UNTUK SINK (SPEAKER / HEADPHONE)
#==============================================================================

# Cek apakah sink sedang di-mute
is_sink_muted() {
    wpctl get-volume @DEFAULT_AUDIO_SINK@ | grep -q '\[MUTED\]'
}

# Dapatkan volume sink saat ini dalam format persen (0-100)
get_sink_volume() {
    if is_sink_muted; then
        echo 0
    else
        wpctl get-volume @DEFAULT_AUDIO_SINK@ | awk '{ vol = $2 * 100; printf "%.0f\n", vol }'
    fi
}

# Dapatkan NAMA ikon yang sesuai untuk volume sink
get_sink_icon() {
    if is_sink_muted; then
        echo "audio-volume-muted" # <-- Hanya nama, tanpa path dan ekstensi
    else
        vol=$(get_sink_volume)
        if (( vol <= 30 )); then
            echo "audio-volume-low"
        elif (( vol <= 60 )); then
            echo "audio-volume-medium"
        else
            echo "audio-volume-high"
        fi
    fi
}

# Tampilkan notifikasi untuk volume sink
notify_sink() {
    local vol=$(get_sink_volume)
    local icon_name=$(get_sink_icon) # <-- Mengambil nama ikon
    local message="Volume: ${vol}%"

    if is_sink_muted; then
        message="Volume Dimatikan"
    fi

    # Gunakan nama ikon langsung dengan opsi -i
    notify-send -h string:x-canonical-private-synchronous:sys-notify -u low -i "$icon_name" "$message"
}

# Naikkan volume sink
inc_volume() {
    wpctl set-volume -l 1.5 @DEFAULT_AUDIO_SINK@ 5%+
    notify_sink
}

# Turunkan volume sink
dec_volume() {
    wpctl set-volume @DEFAULT_AUDIO_SINK@ 5%-
    notify_sink
}

# Toggle mute untuk sink
toggle_mute() {
    wpctl set-mute @DEFAULT_AUDIO_SINK@ toggle
    notify_sink
}

#==============================================================================
# FUNGSI UNTUK SOURCE (MIKROFON)
#==============================================================================

# Cek apakah source (mikrofon) sedang di-mute
is_mic_muted() {
    wpctl get-volume @DEFAULT_AUDIO_SOURCE@ | grep -q '\[MUTED\]'
}

# Dapatkan volume mikrofon saat ini dalam format persen (0-100)
get_mic_volume() {
    if is_mic_muted; then
        echo 0
    else
        wpctl get-volume @DEFAULT_AUDIO_SOURCE@ | awk '{ vol = $2 * 100; printf "%.0f\n", vol }'
    fi
}

# Tampilkan notifikasi untuk status mikrofon
notify_mic() {
    if is_mic_muted; then
        # Langsung gunakan nama ikon "microphone-mute"
        notify-send -h string:x-canonical-private-synchronous:sys-notify -u low -i "microphone-mute" "Mikrofon Dimatikan"
    else
        local vol=$(get_mic_volume)
        # Langsung gunakan nama ikon "microphone"
        notify-send -h string:x-canonical-private-synchronous:sys-notify -u low -i "microphone" "Mikrofon Aktif: ${vol}%"
    fi
}

# Toggle mute untuk mikrofon
toggle_mic() {
    wpctl set-mute @DEFAULT_AUDIO_SOURCE@ toggle
    notify_mic
}

# Naikkan volume mikrofon
inc_mic_volume() {
    wpctl set-volume -l 1.5 @DEFAULT_AUDIO_SOURCE@ 5%+
    notify_mic
}

# Turunkan volume mikrofon
dec_mic_volume() {
    wpctl set-volume @DEFAULT_AUDIO_SOURCE@ 5%-
    notify_mic
}

#==============================================================================
# EKSEKUSI BERDASARKAN ARGUMEN
#==============================================================================

case "$1" in
    --inc)
        inc_volume
        ;;
    --dec)
        dec_volume
        ;;
    --toggle)
        toggle_mute
        ;;
    --toggle-mic)
        toggle_mic
        ;;
    --mic-inc)
        inc_mic_volume
        ;;
    --mic-dec)
        dec_mic_volume
        ;;
    *)
        echo "Volume: $(get_sink_volume)%"
        echo "Mic: $(get_mic_volume)%"
        ;;
esac
